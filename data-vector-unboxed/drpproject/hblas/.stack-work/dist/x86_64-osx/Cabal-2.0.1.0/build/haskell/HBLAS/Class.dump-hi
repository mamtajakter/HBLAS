
==================== FINAL INTERFACE ====================
2020-05-31 21:52:54.64026 UTC

interface hblas-0.0.0.0-F71I6QhmeyVEy1DCNMIf5j:HBLAS.Class 8022
  interface hash: 98f037260f89f9c679158fc0e64b3f86
  ABI hash: 02e9dd2e97ec6b77a903a4c0f59ca65b
  export-list hash: ff391cb036a17f08d7f7e5e5e6adf32a
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: e1794d0c0a2efc3a1bd7ef881d5a5ef9
  sig of: Nothing
  used TH splices: False
  where
exports:
  HBLAS.Class.replicateHBlas
  HBLAS.Class.HBLAS
  HBLAS.Class.Indexable{HBLAS.Class.!! HBLAS.Class.elemIndex}
  HBLAS.Class.Mappable{HBLAS.Class.map}
  HBLAS.Class.Zippable{HBLAS.Class.zipWith}
module dependencies:
package dependencies: array-0.5.2.0 base-4.10.1.0 deepseq-1.4.3.0
                      ghc-prim-0.5.1.1 integer-gmp-1.0.1.0 primitive-0.6.3.0
                      transformers-0.5.2.0 vector-0.12.0.1
orphans: vector-0.12.0.1:Data.Vector.Fusion.Bundle
         transformers-0.5.2.0:Control.Monad.Trans.Error
         base-4.10.1.0:GHC.Float base-4.10.1.0:GHC.Base
family instance modules: base-4.10.1.0:Control.Applicative
                         base-4.10.1.0:Data.Complex base-4.10.1.0:Data.Either
                         base-4.10.1.0:Data.Functor.Compose base-4.10.1.0:Data.Functor.Const
                         base-4.10.1.0:Data.Functor.Identity
                         base-4.10.1.0:Data.Functor.Product base-4.10.1.0:Data.Functor.Sum
                         base-4.10.1.0:Data.List.NonEmpty base-4.10.1.0:Data.Monoid
                         base-4.10.1.0:Data.Semigroup base-4.10.1.0:Data.Type.Equality
                         base-4.10.1.0:Data.Version base-4.10.1.0:Data.Void
                         base-4.10.1.0:GHC.Exts base-4.10.1.0:GHC.Generics
                         base-4.10.1.0:GHC.IO.Exception base-4.10.1.0:GHC.TypeLits
                         base-4.10.1.0:GHC.TypeNats
                         primitive-0.6.3.0:Control.Monad.Primitive
                         primitive-0.6.3.0:Data.Primitive.Array vector-0.12.0.1:Data.Vector
import  -/  base-4.10.1.0:Data.Foldable 9ed87455d68e87ff2b5b8725eae9897e
import  -/  base-4.10.1.0:Data.List 4ab7fa2a1b87502b23af891a384f0506
import  -/  base-4.10.1.0:Data.Monoid c0108b166e27f747671c7fe4ffb11019
import  -/  base-4.10.1.0:Data.OldList 555420b092ca8cf0a8f9666bc0e07dcf
import  -/  base-4.10.1.0:GHC.Base 782fd99b5e36f3698a26179a49afca64
import  -/  base-4.10.1.0:GHC.List e3060fbeb44ce0038e6b4dedf2dd9cf1
import  -/  base-4.10.1.0:GHC.Num 6e1dc5d36d99a802edb39b92bb1923b8
import  -/  base-4.10.1.0:Prelude 31945b7d0084063347fc52506d3a4020
import  -/  ghc-prim-0.5.1.1:GHC.Classes 93e2660065dce9329577e83d76d8f0d4
import  -/  vector-0.12.0.1:Data.Vector 05d09acb6f8f89c1df7193ef513155f3
addDependentFile "/Users/mamtajakter/.stack/programs/x86_64-osx/ghc-8.2.2/lib/ghc-8.2.2/include/ghcversion.h"
addDependentFile ".stack-work/dist/x86_64-osx/Cabal-2.0.1.0/build/autogen/cabal_macros.h"
7236baf604ae109d2512739d848b4728
  $fIndexableVector :: HBLAS.Class.Indexable Data.Vector.Vector
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Data.Vector.Vector Data.Vector.! Data.Vector.elemIndex -}
7236baf604ae109d2512739d848b4728
  $fIndexable[] :: HBLAS.Class.Indexable []
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ [] GHC.List.!! Data.OldList.elemIndex -}
5fffaac7c1e8fd755251c89927470c06
  $fMappableVector :: HBLAS.Class.Mappable Data.Vector.Vector
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Data.Vector.Vector
                  Data.Vector.$fFoldableVector
                  Data.Vector.map -}
5fffaac7c1e8fd755251c89927470c06
  $fMappable[] :: HBLAS.Class.Mappable []
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:. @ [] Data.Foldable.$fFoldable[] GHC.Base.map -}
8ef0dbc0e4f937d018f1d38dd5dc8cd1
  $fZippableVector :: HBLAS.Class.Zippable Data.Vector.Vector
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ Data.Vector.Vector
                  Data.Vector.$fFoldableVector
                  Data.Vector.zipWith -}
8ef0dbc0e4f937d018f1d38dd5dc8cd1
  $fZippable[] :: HBLAS.Class.Zippable []
  DFunId
  {- Strictness: m, Inline: CONLIKE,
     Unfolding: DFun:.
                  @ [] Data.Foldable.$fFoldable[] GHC.List.zipWith -}
4451bc9824f917585f803661e0d90ceb
  $tcIndexable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   226106961280903466##
                   11002978814807735329##
                   HBLAS.Class.$trModule
                   HBLAS.Class.$tcIndexable2
                   0#
                   HBLAS.Class.$tcIndexable1) -}
7921e86e3e9b3e21f64ea6ebdf85aeaa
  $tcIndexable1 :: GHC.Types.KindRep
  {- HasNoCafRefs, Strictness: m4, Inline: [~] -}
98e1b22ea24878f55d8a76029d55b9eb
  $tcIndexable2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HBLAS.Class.$tcIndexable3) -}
cf0949dbbe14e9f409563cb18b55d726
  $tcIndexable3 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Indexable"#) -}
550c4b9ebb693f2e360c675c704782a7
  $tcMappable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   10904721532905648919##
                   11494223781020828975##
                   HBLAS.Class.$trModule
                   HBLAS.Class.$tcMappable1
                   0#
                   HBLAS.Class.$tcIndexable1) -}
f332d6d34db52ae5f018f75ad4b6b2c5
  $tcMappable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HBLAS.Class.$tcMappable2) -}
49290d94512de606b3a086da8e84fa16
  $tcMappable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Mappable"#) -}
ca4dc73191876efe487f3c50899b0320
  $tcZippable :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5179985990937648406##
                   14063048454499776362##
                   HBLAS.Class.$trModule
                   HBLAS.Class.$tcZippable1
                   0#
                   HBLAS.Class.$tcIndexable1) -}
4d1fe2c3987bcf002e215f93427f716c
  $tcZippable1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HBLAS.Class.$tcZippable2) -}
d0ad6d0cf751a65a5b900829cf984d96
  $tcZippable2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("Zippable"#) -}
073124d4f3f6358e9389eca174af840d
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   HBLAS.Class.$trModule3
                   HBLAS.Class.$trModule1) -}
036b550ebc126b2f7793e78af1494a0c
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HBLAS.Class.$trModule2) -}
fef8d6b5c690ef9ab7e30e1a3a84fd5f
  $trModule2 :: GHC.Prim.Addr#
  {- HasNoCafRefs, Unfolding: ("HBLAS.Class"#) -}
10450c2e03a8a3750dd6f8c597f89815
  $trModule3 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS HBLAS.Class.$trModule4) -}
8195c1e181c96218e11303d077d12083
  $trModule4 :: GHC.Prim.Addr#
  {- HasNoCafRefs,
     Unfolding: ("hblas-0.0.0.0-F71I6QhmeyVEy1DCNMIf5j"#) -}
b8194e5824ba88ada17f20569efc65eb
  $wreplicateHBlas ::
    (HBLAS.Class.HBLAS m, GHC.Base.Monoid (m n)) =>
    GHC.Prim.Int# -> n -> m n
  {- Arity: 4, HasNoCafRefs,
     Strictness: <L,U(U(A,C(U),A,A,A,A),A,A,A,A)><S,U(U,C(C1(U)),A)><S,1*U><L,U>,
     Inline: [0] -}
9d127d5bd864f767f10fc072d2f30ac4
  type HBLAS (m :: * -> *) =
    (GHC.Base.Applicative m, HBLAS.Class.Mappable m,
     HBLAS.Class.Zippable m, HBLAS.Class.Indexable m,
     Data.Foldable.Foldable m)
    :: GHC.Types.Constraint
7236baf604ae109d2512739d848b4728
  class Indexable (m :: * -> *) where
    (!!) :: m a -> GHC.Types.Int -> a
    elemIndex :: GHC.Classes.Eq a =>
                 a -> m a -> GHC.Base.Maybe GHC.Types.Int
    {-# MINIMAL (!!), elemIndex #-}
5fffaac7c1e8fd755251c89927470c06
  class Data.Foldable.Foldable m => Mappable (m :: * -> *) where
    map :: (a -> b) -> m a -> m b
    {-# MINIMAL map #-}
8ef0dbc0e4f937d018f1d38dd5dc8cd1
  class Data.Foldable.Foldable m => Zippable (m :: * -> *) where
    zipWith :: (a -> b -> c) -> m a -> m b -> m c
    {-# MINIMAL zipWith #-}
946065b64db613218be3e82ec1ae7485
  replicateHBlas ::
    (GHC.Base.Applicative m, HBLAS.Class.HBLAS m,
     GHC.Base.Monoid (m n)) =>
    GHC.Types.Int -> n -> m n
  {- Arity: 5, HasNoCafRefs,
     Strictness: <L,A><L,U(U(A,C(U),A,A,A,A),A,A,A,A)><S,U(U,C(C1(U)),A)><S(S),1*U(1*U)><L,U>,
     Inline: [0],
     Unfolding: InlineRule (5, True, False)
                (\ @ m :: * -> *
                   @ n
                   (w :: GHC.Base.Applicative m)
                   (w1 :: HBLAS.Class.HBLAS m)
                   (w2 :: GHC.Base.Monoid (m n))
                   (w3 :: GHC.Types.Int)
                   (w4 :: n) ->
                 case w3 of ww { GHC.Types.I# ww1 ->
                 HBLAS.Class.$wreplicateHBlas @ m @ n w1 w2 ww1 w4 }) -}
instance HBLAS.Class.Indexable [Data.Vector.Vector]
  = HBLAS.Class.$fIndexableVector
instance HBLAS.Class.Indexable [[]] = HBLAS.Class.$fIndexable[]
instance HBLAS.Class.Mappable [Data.Vector.Vector]
  = HBLAS.Class.$fMappableVector
instance HBLAS.Class.Mappable [[]] = HBLAS.Class.$fMappable[]
instance HBLAS.Class.Zippable [Data.Vector.Vector]
  = HBLAS.Class.$fZippableVector
instance HBLAS.Class.Zippable [[]] = HBLAS.Class.$fZippable[]
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

