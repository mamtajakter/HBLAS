
==================== Tidy Core ====================
2019-03-24 08:15:17.167361 UTC

Result size of Tidy Core
  = {terms: 193, types: 202, coercions: 152, joins: 0/0}

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_r8el :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl_r8el = ghc-prim-0.5.1.1:GHC.Types.I# 0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule4 :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule3 :: ghc-prim-0.5.1.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule3
  = ghc-prim-0.5.1.1:GHC.Types.TrNameS Main.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule2 :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule2 = "Main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule1 :: ghc-prim-0.5.1.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule1
  = ghc-prim-0.5.1.1:GHC.Types.TrNameS Main.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Main.$trModule :: ghc-prim-0.5.1.1:GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Main.$trModule
  = ghc-prim-0.5.1.1:GHC.Types.Module Main.$trModule3 Main.$trModule1

-- RHS size: {terms: 5, types: 1, coercions: 0, joins: 0/0}
vecX_r8em :: Vec.Vector Float
[GblId]
vecX_r8em
  = HBLAS.IO.Vector.$wcreateVecX
      @ Float GHC.Float.$fNumFloat 0# lvl_r8el 1000#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_r8en :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl1_r8en = "AXPYAXPY : "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl2_r8eo :: Integer
[GblId, Caf=NoCafRefs]
lvl2_r8eo = 1000000000000000000

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r8ep :: Float
[GblId, Caf=NoCafRefs, Str=m]
lvl3_r8ep = ghc-prim-0.5.1.1:GHC.Types.F# 1.0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r8eq :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl4_r8eq = "Vector size "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_r8er :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl5_r8er = ": "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl6_r8es :: [Char]
[GblId]
lvl6_r8es = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl5_r8er

-- RHS size: {terms: 11, types: 12, coercions: 0, joins: 0/0}
lvl7_r8et :: [Char]
[GblId]
lvl7_r8et
  = case GHC.Show.$wshowSignedInt
           0# 1000# (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a3RM, ww6_a3RN #) ->
    ++
      @ Char
      (ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a3RM ww6_a3RN)
      lvl6_r8es
    }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
lvl8_r8eu :: [Char]
[GblId]
lvl8_r8eu
  = ghc-prim-0.5.1.1:GHC.CString.unpackAppendCString#
      lvl4_r8eq lvl7_r8et

-- RHS size: {terms: 12, types: 17, coercions: 0, joins: 0/0}
lvl9_r8ev :: String
[GblId]
lvl9_r8ev
  = case vecX_r8em of
    { Data.Vector.Vector ipv_s7aL ipv1_s7aM ipv2_s7aN ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7aM (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a3RM, ww6_a3RN #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a3RM ww6_a3RN
    }
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl10_r8ew :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl10_r8ew = "Length of vector 2: "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl11_r8ex :: [Char]
[GblId]
lvl11_r8ex = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl10_r8ew

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl12_r8ey :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl12_r8ey = "Length of vector 1: "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl13_r8ez :: [Char]
[GblId]
lvl13_r8ez = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl12_r8ey

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl14_r8eA :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl14_r8eA
  = "\n\
    \BLAS Level-1 test : "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl15_r8eB :: [Char]
[GblId]
lvl15_r8eB = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl14_r8eA

-- RHS size: {terms: 104, types: 118, coercions: 143, joins: 0/0}
Main.main1
  :: ghc-prim-0.5.1.1:GHC.Prim.State#
       ghc-prim-0.5.1.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
             ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
           () #)
[GblId, Arity=1, Str=<S,U>]
Main.main1
  = \ (s_a3lL
         :: ghc-prim-0.5.1.1:GHC.Prim.State#
              ghc-prim-0.5.1.1:GHC.Prim.RealWorld) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl15_r8eB
             ghc-prim-0.5.1.1:GHC.Types.True
             s_a3lL
      of
      { (# ipv_a3lO, ipv1_a3lP #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl13_r8ez
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv_a3lO
      of
      { (# ipv2_X3md, ipv3_X3mf #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl9_r8ev
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv2_X3md
      of
      { (# ipv4_X3mi, ipv5_X3mk #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl11_r8ex
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv4_X3mi
      of
      { (# ipv6_X3mn, ipv7_X3mp #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl9_r8ev
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv6_X3mn
      of
      { (# ipv8_X3ms, ipv9_X3mu #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl8_r8eu
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv8_X3ms
      of
      { (# ipv10_X3mx, ipv11_X3mz #) ->
      case Data.Time.Clock.POSIX.getCurrentTime1 ipv10_X3mx of
      { (# ipv12_a5kH, ipv13_a5kI #) ->
      case vecX_r8em of
      { Data.Vector.Vector ww1_a6ox ww2_a6oy ww3_a6oz ->
      case HBLAS.Level1.$waxpy
             @ Float
             GHC.Float.$fNumFloat
             lvl3_r8ep
             ww1_a6ox
             ww2_a6oy
             ww3_a6oz
             ww1_a6ox
             ww2_a6oy
             ww3_a6oz
      of
      { Data.Vector.Vector ww5_X6pO ww6_X6pQ ww7_X6pS ->
      case HBLAS.Level1.$waxpy
             @ Float
             GHC.Float.$fNumFloat
             lvl3_r8ep
             ww5_X6pO
             ww6_X6pQ
             ww7_X6pS
             ww1_a6ox
             ww2_a6oy
             ww3_a6oz
      of
      { Data.Vector.Vector ipv14_s6oK ipv15_s6oL ipv16_s6oM ->
      case Data.Time.Clock.POSIX.getCurrentTime1 ipv12_a5kH of
      { (# ipv17_X5lD, ipv18_X5lF #) ->
      GHC.IO.Handle.Text.hPutStr2
        GHC.IO.Handle.FD.stdout
        (ghc-prim-0.5.1.1:GHC.CString.unpackAppendCString#
           lvl1_r8en
           (case ipv18_X5lF of { UTCTime ww9_a6po ww10_a6pp ->
            case ipv13_a5kI of { UTCTime ww12_a6pu ww13_a6pv ->
            ++
              @ Char
              (Data.Fixed.showFixed
                 @ Data.Fixed.E12
                 (Data.Fixed.$fHasResolutionE12_$cresolution
                  `cast` (Sym (Data.Fixed.N:HasResolution[0] <Data.Fixed.E12>_N)
                          :: ((forall (p :: * -> *). p Data.Fixed.E12 -> Integer) :: *)
                             ~R#
                             (Data.Fixed.HasResolution Data.Fixed.E12 :: Constraint)))
                 ghc-prim-0.5.1.1:GHC.Types.True
                 ((integer-gmp-1.0.1.0:GHC.Integer.Type.divInteger
                     (integer-gmp-1.0.1.0:GHC.Integer.Type.timesInteger
                        (integer-gmp-1.0.1.0:GHC.Integer.Type.minusInteger
                           ((Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww9_a6po ww10_a6pp)
                            `cast` (Nth:2
                                      ((<NominalDiffTime>_R
                                        -> <NominalDiffTime>_R
                                        -> time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                           ; Nth:3
                                               (Nth:3
                                                  ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                   ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> <Integer>_R))))
                                       ; ((time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                           ; Nth:2
                                               ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                 -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                 -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   -> <Integer>_R)))
                                          -> (time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:2
                                                  (Nth:3
                                                     ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                      ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> <Integer>_R))))
                                          -> <Integer>_R))
                                    :: (NominalDiffTime :: *) ~R# (Integer :: *)))
                           ((Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds
                               ww12_a6pu ww13_a6pv)
                            `cast` (Nth:2
                                      (Nth:3
                                         ((<NominalDiffTime>_R
                                           -> <NominalDiffTime>_R
                                           -> time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:3
                                                  (Nth:3
                                                     ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                      ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> <Integer>_R))))
                                          ; ((time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:2
                                                  ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                   ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> <Integer>_R)))
                                             -> (time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                                 ; Nth:2
                                                     (Nth:3
                                                        ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          -> Data.Fixed.N:Fixed[0]
                                                               <Data.Fixed.E12>_P)
                                                         ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                            -> Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P
                                                            -> <Integer>_R))))
                                             -> <Integer>_R)))
                                    :: (NominalDiffTime :: *) ~R# (Integer :: *))))
                        lvl2_r8eo)
                     Data.Fixed.$fHasResolutionE5)
                  `cast` (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                          :: (Integer :: *) ~R# (Data.Fixed.Fixed Data.Fixed.E12 :: *))))
              time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.$fShowNominalDiffTime3
            }
            }))
        ghc-prim-0.5.1.1:GHC.Types.True
        ipv17_X5lD
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
main :: IO ()
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main1
               `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
                       :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                              ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                            -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                                    ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                                  () #)) :: *)
                          ~R#
                          (IO () :: *))}]
main
  = Main.main1
    `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
            :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                   ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                 -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                         ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                       () #)) :: *)
               ~R#
               (IO () :: *))

-- RHS size: {terms: 2, types: 1, coercions: 3, joins: 0/0}
Main.main2
  :: ghc-prim-0.5.1.1:GHC.Prim.State#
       ghc-prim-0.5.1.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
             ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
           () #)
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
Main.main2
  = GHC.TopHandler.runMainIO1
      @ ()
      (Main.main1
       `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
               :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                      ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                    -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                            ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                          () #)) :: *)
                  ~R#
                  (IO () :: *)))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
:Main.main :: IO ()
[GblId,
 Arity=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main2
               `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
                       :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                              ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                            -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                                    ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                                  () #)) :: *)
                          ~R#
                          (IO () :: *))}]
:Main.main
  = Main.main2
    `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
            :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                   ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                 -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                         ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                       () #)) :: *)
               ~R#
               (IO () :: *))


