
==================== Tidy Core ====================
2019-03-24 08:15:11.865021 UTC

Result size of Tidy Core
  = {terms: 293, types: 347, coercions: 152, joins: 0/0}

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl_r8O5 :: Int
[GblId, Caf=NoCafRefs, Str=m]
lvl_r8O5 = ghc-prim-0.5.1.1:GHC.Types.I# 0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule4 :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule4 = "main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule3 :: ghc-prim-0.5.1.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule3
  = ghc-prim-0.5.1.1:GHC.Types.TrNameS Main.$trModule4

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
Main.$trModule2 :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId,
 Caf=NoCafRefs,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 0}]
Main.$trModule2 = "Main"#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
Main.$trModule1 :: ghc-prim-0.5.1.1:GHC.Types.TrName
[GblId,
 Caf=NoCafRefs,
 Str=m1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 20}]
Main.$trModule1
  = ghc-prim-0.5.1.1:GHC.Types.TrNameS Main.$trModule2

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
Main.$trModule :: ghc-prim-0.5.1.1:GHC.Types.Module
[GblId,
 Caf=NoCafRefs,
 Str=m,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 10 30}]
Main.$trModule
  = ghc-prim-0.5.1.1:GHC.Types.Module Main.$trModule3 Main.$trModule1

-- RHS size: {terms: 5, types: 1, coercions: 0, joins: 0/0}
vecX_r8O6 :: Vec.Vector Float
[GblId]
vecX_r8O6
  = HBLAS.IO.Vector.$wcreateVecX
      @ Float GHC.Float.$fNumFloat 0# lvl_r8O5 1000#

-- RHS size: {terms: 4, types: 1, coercions: 0, joins: 0/0}
symSq_r8O7 :: Vec.Vector (Vec.Vector Float)
[GblId]
symSq_r8O7
  = HBLAS.IO.Vector.$wcreateSymSq
      @ Float GHC.Float.$fNumFloat 0# 1000#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl1_r8O8 :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl1_r8O8 = "GEMV : "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl2_r8O9 :: Integer
[GblId, Caf=NoCafRefs]
lvl2_r8O9 = 1000000000000000000

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl3_r8Oa :: Float
[GblId, Caf=NoCafRefs, Str=m]
lvl3_r8Oa = ghc-prim-0.5.1.1:GHC.Types.F# 1.0#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl4_r8Ob :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl4_r8Ob = "Matrix size "#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl5_r8Oc :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl5_r8Oc = "X"#

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl6_r8Od :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl6_r8Od = ": "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl7_r8Oe :: [Char]
[GblId]
lvl7_r8Oe = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl6_r8Od

-- RHS size: {terms: 11, types: 12, coercions: 0, joins: 0/0}
lvl8_r8Of :: [Char]
[GblId]
lvl8_r8Of
  = case GHC.Show.$wshowSignedInt
           0# 1000# (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_X433, ww6_X435 #) ->
    ++
      @ Char
      (ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_X433 ww6_X435)
      lvl7_r8Oe
    }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
lvl9_r8Og :: [Char]
[GblId]
lvl9_r8Og
  = ghc-prim-0.5.1.1:GHC.CString.unpackAppendCString#
      lvl5_r8Oc lvl8_r8Of

-- RHS size: {terms: 11, types: 12, coercions: 0, joins: 0/0}
lvl10_r8Oh :: [Char]
[GblId]
lvl10_r8Oh
  = case GHC.Show.$wshowSignedInt
           0# 1000# (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ++
      @ Char
      (ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n)
      lvl9_r8Og
    }

-- RHS size: {terms: 3, types: 0, coercions: 0, joins: 0/0}
lvl11_r8Oi :: [Char]
[GblId]
lvl11_r8Oi
  = ghc-prim-0.5.1.1:GHC.CString.unpackAppendCString#
      lvl4_r8Ob lvl10_r8Oh

-- RHS size: {terms: 15, types: 20, coercions: 0, joins: 0/0}
lvl12_r8Oj :: String
[GblId]
lvl12_r8Oj
  = case HBLAS.IO.Vector.$wcreateSymUpTri
           @ Integer GHC.Num.$fNumInteger 0# 1000#
    of
    { Data.Vector.Vector ipv_s7mQ ipv1_s7mR ipv2_s7mS ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7mR (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 15, types: 20, coercions: 0, joins: 0/0}
lvl13_r8Ok :: String
[GblId]
lvl13_r8Ok
  = case HBLAS.IO.Vector.$wcreateSymLowTri
           @ Integer GHC.Num.$fNumInteger 0# 1000#
    of
    { Data.Vector.Vector ipv_s7mr ipv1_s7ms ipv2_s7mt ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7ms (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 15, types: 20, coercions: 0, joins: 0/0}
lvl14_r8Ol :: String
[GblId]
lvl14_r8Ol
  = case HBLAS.IO.Vector.$wcreateSymUpSq
           @ Integer GHC.Num.$fNumInteger 0# 1000#
    of
    { Data.Vector.Vector ipv_s7m2 ipv1_s7m3 ipv2_s7m4 ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7m3 (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 15, types: 20, coercions: 0, joins: 0/0}
lvl15_r8Om :: String
[GblId]
lvl15_r8Om
  = case HBLAS.IO.Vector.$wcreateSymLowSq
           @ Integer GHC.Num.$fNumInteger 0# 1000#
    of
    { Data.Vector.Vector ipv_s7lD ipv1_s7lE ipv2_s7lF ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7lE (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 12, types: 19, coercions: 0, joins: 0/0}
lvl16_r8On :: String
[GblId]
lvl16_r8On
  = case symSq_r8O7 of
    { Data.Vector.Vector ipv_s7le ipv1_s7lf ipv2_s7lg ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7lf (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 12, types: 17, coercions: 0, joins: 0/0}
lvl17_r8Oo :: String
[GblId]
lvl17_r8Oo
  = case vecX_r8O6 of
    { Data.Vector.Vector ipv_s7kP ipv1_s7kQ ipv2_s7kR ->
    case GHC.Show.$wshowSignedInt
           0# ipv1_s7kQ (ghc-prim-0.5.1.1:GHC.Types.[] @ Char)
    of
    { (# ww5_a41m, ww6_a41n #) ->
    ghc-prim-0.5.1.1:GHC.Types.: @ Char ww5_a41m ww6_a41n
    }
    }

-- RHS size: {terms: 1, types: 0, coercions: 0, joins: 0/0}
lvl18_r8Op :: ghc-prim-0.5.1.1:GHC.Prim.Addr#
[GblId, Caf=NoCafRefs]
lvl18_r8Op
  = "\n\
    \BLAS Level-2 Test: "#

-- RHS size: {terms: 2, types: 0, coercions: 0, joins: 0/0}
lvl19_r8Oq :: [Char]
[GblId]
lvl19_r8Oq = ghc-prim-0.5.1.1:GHC.CString.unpackCString# lvl18_r8Op

-- RHS size: {terms: 114, types: 144, coercions: 143, joins: 0/0}
Main.main1
  :: ghc-prim-0.5.1.1:GHC.Prim.State#
       ghc-prim-0.5.1.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
             ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
           () #)
[GblId, Arity=1, Str=<S,U>]
Main.main1
  = \ (s_a3vm
         :: ghc-prim-0.5.1.1:GHC.Prim.State#
              ghc-prim-0.5.1.1:GHC.Prim.RealWorld) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl19_r8Oq
             ghc-prim-0.5.1.1:GHC.Types.True
             s_a3vm
      of
      { (# ipv_a3vp, ipv1_a3vq #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl17_r8Oo
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv_a3vp
      of
      { (# ipv2_X3vS, ipv3_X3vU #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl17_r8Oo
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv2_X3vS
      of
      { (# ipv4_X3vX, ipv5_X3vZ #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl16_r8On
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv4_X3vX
      of
      { (# ipv6_X3w2, ipv7_X3w4 #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl15_r8Om
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv6_X3w2
      of
      { (# ipv8_X3w7, ipv9_X3w9 #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl14_r8Ol
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv8_X3w7
      of
      { (# ipv10_X3wc, ipv11_X3we #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl13_r8Ok
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv10_X3wc
      of
      { (# ipv12_X3wh, ipv13_X3wj #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl12_r8Oj
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv12_X3wh
      of
      { (# ipv14_X3wm, ipv15_X3wo #) ->
      case GHC.IO.Handle.Text.hPutStr2
             GHC.IO.Handle.FD.stdout
             lvl11_r8Oi
             ghc-prim-0.5.1.1:GHC.Types.True
             ipv14_X3wm
      of
      { (# ipv16_X3wr, ipv17_X3wt #) ->
      case Data.Time.Clock.POSIX.getCurrentTime1 ipv16_X3wr of
      { (# ipv18_a5tp, ipv19_a5tq #) ->
      case vecX_r8O6 of ww_a3jm
      { Data.Vector.Vector ww1_a3qf ww2_a3qg ww3_a3qh ->
      case HBLAS.Level2.$wgemv
             @ Float
             GHC.Float.$fNumFloat
             symSq_r8O7
             ww_a3jm
             ww1_a3qf
             ww2_a3qg
             ww3_a3qh
             lvl3_r8Oa
             lvl3_r8Oa
      of
      { Data.Vector.Vector ipv20_s6ql ipv21_s6qm ipv22_s6qn ->
      case Data.Time.Clock.POSIX.getCurrentTime1 ipv18_a5tp of
      { (# ipv23_X5uC, ipv24_X5uE #) ->
      GHC.IO.Handle.Text.hPutStr2
        GHC.IO.Handle.FD.stdout
        (ghc-prim-0.5.1.1:GHC.CString.unpackAppendCString#
           lvl1_r8O8
           (case ipv24_X5uE of { UTCTime ww5_a6qZ ww6_a6r0 ->
            case ipv19_a5tq of { UTCTime ww8_a6r5 ww9_a6r6 ->
            ++
              @ Char
              (Data.Fixed.showFixed
                 @ Data.Fixed.E12
                 (Data.Fixed.$fHasResolutionE12_$cresolution
                  `cast` (Sym (Data.Fixed.N:HasResolution[0] <Data.Fixed.E12>_N)
                          :: ((forall (p :: * -> *). p Data.Fixed.E12 -> Integer) :: *)
                             ~R#
                             (Data.Fixed.HasResolution Data.Fixed.E12 :: Constraint)))
                 ghc-prim-0.5.1.1:GHC.Types.True
                 ((integer-gmp-1.0.1.0:GHC.Integer.Type.divInteger
                     (integer-gmp-1.0.1.0:GHC.Integer.Type.timesInteger
                        (integer-gmp-1.0.1.0:GHC.Integer.Type.minusInteger
                           ((Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww5_a6qZ ww6_a6r0)
                            `cast` (Nth:2
                                      ((<NominalDiffTime>_R
                                        -> <NominalDiffTime>_R
                                        -> time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                           ; Nth:3
                                               (Nth:3
                                                  ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                   ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> <Integer>_R))))
                                       ; ((time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                           ; Nth:2
                                               ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                 -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                 -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                   -> <Integer>_R)))
                                          -> (time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:2
                                                  (Nth:3
                                                     ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                      ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> <Integer>_R))))
                                          -> <Integer>_R))
                                    :: (NominalDiffTime :: *) ~R# (Integer :: *)))
                           ((Data.Time.Clock.POSIX.$wutcTimeToPOSIXSeconds ww8_a6r5 ww9_a6r6)
                            `cast` (Nth:2
                                      (Nth:3
                                         ((<NominalDiffTime>_R
                                           -> <NominalDiffTime>_R
                                           -> time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:3
                                                  (Nth:3
                                                     ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                       -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                      ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                         -> <Integer>_R))))
                                          ; ((time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                              ; Nth:2
                                                  ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                    -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                                                   ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                      -> <Integer>_R)))
                                             -> (time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.N:NominalDiffTime[0]
                                                 ; Nth:2
                                                     (Nth:3
                                                        ((<Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          -> <Data.Fixed.Fixed Data.Fixed.E12>_R
                                                          -> Data.Fixed.N:Fixed[0]
                                                               <Data.Fixed.E12>_P)
                                                         ; (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P
                                                            -> Data.Fixed.N:Fixed[0]
                                                                 <Data.Fixed.E12>_P
                                                            -> <Integer>_R))))
                                             -> <Integer>_R)))
                                    :: (NominalDiffTime :: *) ~R# (Integer :: *))))
                        lvl2_r8O9)
                     Data.Fixed.$fHasResolutionE5)
                  `cast` (Sym (Data.Fixed.N:Fixed[0] <Data.Fixed.E12>_P)
                          :: (Integer :: *) ~R# (Data.Fixed.Fixed Data.Fixed.E12 :: *))))
              time-1.8.0.2:Data.Time.Clock.Internal.NominalDiffTime.$fShowNominalDiffTime3
            }
            }))
        ghc-prim-0.5.1.1:GHC.Types.True
        ipv23_X5uC
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }
      }

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
main :: IO ()
[GblId,
 Arity=1,
 Str=<S,U>,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main1
               `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
                       :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                              ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                            -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                                    ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                                  () #)) :: *)
                          ~R#
                          (IO () :: *))}]
main
  = Main.main1
    `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
            :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                   ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                 -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                         ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                       () #)) :: *)
               ~R#
               (IO () :: *))

-- RHS size: {terms: 2, types: 1, coercions: 3, joins: 0/0}
Main.main2
  :: ghc-prim-0.5.1.1:GHC.Prim.State#
       ghc-prim-0.5.1.1:GHC.Prim.RealWorld
     -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
             ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
           () #)
[GblId,
 Arity=1,
 Unf=Unf{Src=<vanilla>, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True, Guidance=IF_ARGS [] 20 60}]
Main.main2
  = GHC.TopHandler.runMainIO1
      @ ()
      (Main.main1
       `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
               :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                      ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                    -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                            ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                          () #)) :: *)
                  ~R#
                  (IO () :: *)))

-- RHS size: {terms: 1, types: 0, coercions: 3, joins: 0/0}
:Main.main :: IO ()
[GblId,
 Arity=1,
 Unf=Unf{Src=InlineStable, TopLvl=True, Value=True, ConLike=True,
         WorkFree=True, Expandable=True,
         Guidance=ALWAYS_IF(arity=0,unsat_ok=True,boring_ok=True)
         Tmpl= Main.main2
               `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
                       :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                              ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                            -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                                    ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                                  () #)) :: *)
                          ~R#
                          (IO () :: *))}]
:Main.main
  = Main.main2
    `cast` (Sym (ghc-prim-0.5.1.1:GHC.Types.N:IO[0] <()>_R)
            :: ((ghc-prim-0.5.1.1:GHC.Prim.State#
                   ghc-prim-0.5.1.1:GHC.Prim.RealWorld
                 -> (# ghc-prim-0.5.1.1:GHC.Prim.State#
                         ghc-prim-0.5.1.1:GHC.Prim.RealWorld,
                       () #)) :: *)
               ~R#
               (IO () :: *))


